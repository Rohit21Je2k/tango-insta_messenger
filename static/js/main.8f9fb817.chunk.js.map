{"version":3,"sources":["Header/Header.js","MenuBar/MenuBar.js","StaticData/people.js","Chats/ChatBox.js","StaticData/chats.js","Chats/Chats.js","StaticData/messages.js","Messenger/Messenger.js","App.js","index.js"],"names":["Header","className","src","alt","MenuBar","people","name","id","image","ChatBox","props","useState","person","setPerson","useEffect","filter","userId","Fragment","href","chats","messages","user","lastMsg","time","sender","message","Chats","setChats","chatsData","chat","length","map","index","person1","person2","Messenger","pid","useParams","input","setInput","undefined","prevValue","concat","type","onClick","onSubmit","event","preventDefault","onChange","target","value","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f9fb817.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"main-page\">\r\n      <h1>Tango</h1>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRtxtjn4FO15TqY7pnoNd-XE6uhcGpu3e_DYw&usqp=CAU\"\r\n        alt=\"pic\"\r\n      />\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./MenuBar.css\";\r\n\r\nexport default function MenuBar() {\r\n  return (\r\n    <div className=\"menu-bar\">\r\n      <div className=\"chats\"><p>Chats</p></div>\r\n      <div className=\"friends\"><p>Friends</p></div>\r\n      <div className=\"posts\"><p>Posts</p></div>\r\n    </div>\r\n  );\r\n}\r\n","const people = [\r\n  {\r\n    name: \"Batman\",\r\n    id: \"Batman\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRtxtjn4FO15TqY7pnoNd-XE6uhcGpu3e_DYw&usqp=CAU\",\r\n  },\r\n  {\r\n    name: \"James Gordon\",\r\n    id: \"jamesgr123\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTpZmIzsS7vu0K2_yIjvinMisiV2xjjaSTQIg&usqp=CAU\",\r\n  },\r\n\r\n  {\r\n    name: \"Joker\",\r\n    id: \"jokerisdad\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTzN9ybRnUtzSOkPB7-ShH5eaV7v8CO8lKtuQ&usqp=CAU\",\r\n  },\r\n  {\r\n    name: \"Robin\",\r\n    id: \"sidekick\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoNrcN3E5LwEsk9dA9qN0BKuYOPZrP32koWg&usqp=CAU\",\r\n  },\r\n  {\r\n    name: \"Nightwing\",\r\n    id: \"sastabatman\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRmG8DHGb0Z_8YgkrGSvL0XwtSXWhPvX9ZCuw&usqp=CAU\",\r\n  },\r\n  {\r\n    name: \"Alfred Pennyworth\",\r\n    id: \"mrbutler\",\r\n    image:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQOM9Ixp0uScWouPpfkNQcpDZ4VQUsZArfk6Q&usqp=CAU\",\r\n  },\r\n  {\r\n    name: \"Red Hood\",\r\n    id: \"lalbatman\",\r\n    image: \"https://i.ytimg.com/vi/ox3yzZXK1Bc/maxresdefault.jpg\",\r\n  },\r\n];\r\n\r\nexport default people;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport people from \"../StaticData/people\";\r\n\r\nexport default function ChatBox(props) {\r\n  const [person, setPerson] = useState();\r\n  useEffect(() => {\r\n    setPerson(people.filter((person) => person.id === props.userId)[0]);\r\n  }, [props.userId]);\r\n  return (\r\n    <React.Fragment>\r\n      {person && (\r\n        <div className=\"chat-box\">\r\n          <img className=\"friend-image\" alt=\"friend-img\" src={person.image} />\r\n          <a href={`/chats/${person.id}`} className=\"friend-info-a\">\r\n            <div className=\"friend-info\">\r\n              <h5 className=\"friend-name\">Name : {person.name}</h5>\r\n              <p className=\"friend-msg\">Message: </p>\r\n            </div>\r\n          </a>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const chats = [\r\n  {\r\n    id: \"Batman\",\r\n    messages: [\r\n      {\r\n        user: \"jamesgr123\",\r\n        lastMsg: {\r\n          time: \"\",\r\n          sender: \"\",\r\n          message: \"\",\r\n        },\r\n      },\r\n      {\r\n        user: \"jokerisdad\",\r\n        lastMsg: {\r\n          time: \"\",\r\n          sender: \"\",\r\n          message: \"\",\r\n        },\r\n      },\r\n      {\r\n        user: \"sidekick\",\r\n        lastMsg: {\r\n          time: \"\",\r\n          sender: \"\",\r\n          message: \"\",\r\n        },\r\n      },\r\n      {\r\n        user: \"sastabatman\",\r\n        lastMsg: {\r\n          time: \"\",\r\n          sender: \"\",\r\n          message: \"\",\r\n        },\r\n      },\r\n      {\r\n        user: \"mrbutler\",\r\n        lastMsg: {\r\n          time: \"\",\r\n          sender: \"\",\r\n          message: \"\",\r\n        },\r\n      },\r\n      {\r\n        user: \"lalbatman\",\r\n        lastMsg: {\r\n          time: \"\",\r\n          sender: \"\",\r\n          message: \"\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"jamesgr123\",\r\n    messages: [\"\", \"\", \"\"],\r\n  },\r\n\r\n  {\r\n    id: \"jokerisdad\",\r\n    messages: [\"\", \"\", \"\"],\r\n  },\r\n  {\r\n    id: \"sidekick\",\r\n    messages: [\"\", \"\", \"\"],\r\n  },\r\n  {\r\n    id: \"sastabatman\",\r\n    messages: [\"\", \"\", \"\"],\r\n  },\r\n  {\r\n    id: \"mrbutler\",\r\n    messages: [\"\", \"\", \"\"],\r\n  },\r\n  {\r\n    id: \"lalBatman\",\r\n    messages: [\"\", \"\", \"\"],\r\n  },\r\n];\r\n\r\nexport default chats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport { default as chatsData } from \"../StaticData/chats\";\r\n\r\nimport \"./Chats.css\";\r\n\r\nexport default function Chats(props) {\r\n  const [chats, setChats] = useState([]);\r\n  useEffect(() => {\r\n    setChats(chatsData.filter((chat) => chat.id === \"Batman\")[0].messages);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"all-chat\">\r\n      {chats.length !== 0 && chats.map((userId,index) => <ChatBox key={index} userId={userId.user} />)}\r\n    </div>\r\n  );\r\n}\r\n","const messages = [\r\n  {\r\n    id: \"jamesgr123:Batman\",\r\n    person1: \"jamesgr123\",\r\n    person2: \"Batman\",\r\n    lastMsg: \"meet me at the rooftop\",\r\n    messages: [\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"jamesgr123\",\r\n        message: \"we need help\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: \"meet me at the rooftop\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"jamesgr123\",\r\n        message: \"i ll be there in 10 mins\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"jokerisdad:Batman\",\r\n    person1: \"jokerisdad\",\r\n    person2: \"Batman\",\r\n    lastMsg: \"🦇🦇🦇\",\r\n    messages: [\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"jokerisdad\",\r\n        message: \"why so serious\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: \"🦇🦇🦇\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"jokerisdad\",\r\n        message: \"i like killing bats\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"sidekick:Batman\",\r\n    person1: \"sidekick\",\r\n    person2: \"Batman\",\r\n    lastMsg: \"Dont touch my batmobile\",\r\n    messages: [\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"sidekick\",\r\n        message: \"i m taking the car out\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: \"Dont touch my batmobile\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"sidekick\",\r\n        message: \"ok i m taking the bike then\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: \"sastabatman:Batman\",\r\n    person1: \"sastabatman\",\r\n    person2: \"Batman\",\r\n    lastMsg: \"no sighting so far\",\r\n    messages: [\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"sastabatman\",\r\n        message: \"any updates on bane\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: \"no sighting so far\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"sastabatman\",\r\n        message: \"what the bank robbery last week\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"mrbutler:Batman\",\r\n    person1: \"mrbutler\",\r\n    person2: \"Batman\",\r\n    lastMsg: \"paneer tikka roll\",\r\n    messages: [\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"mrbutler\",\r\n        message: \"what u want for dinner\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: \"paneer tikka roll\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"mrbutler\",\r\n        message: \"and what for dessert, sir\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: \"lalbatman:Batman\",\r\n    person1: \"lalbatman\",\r\n    person2: \"Batman\",\r\n    lastMsg: \"killing people is not justice\",\r\n    messages: [\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"lalbatman\",\r\n        message: \"justice is served\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: \"killing people is not justice\",\r\n      },\r\n      {\r\n        time: \"2020-12-22\",\r\n        sender: \"lalbatman\",\r\n        message: \"they dont deserve to live\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default messages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport messages from \"../StaticData/messages\";\r\nimport people from \"../StaticData/people\";\r\nimport \"./Messenger.css\";\r\n\r\nexport default function Messenger(props) {\r\n  const pid = useParams().userId;\r\n  const [input, setInput] = useState(\"\");\r\n  const [chats, setChats] = useState([]);\r\n  const [person, setPerson] = useState();\r\n\r\n  useEffect(() => {\r\n    if (pid !== undefined) {\r\n      setPerson(people.filter((person) => person.id === pid)[0]);\r\n      setChats((prevValue) =>\r\n        prevValue.concat(\r\n          messages.filter(\r\n            (message) =>\r\n              message.id === `${pid}:Batman` || message.id === `Batman:${pid}`\r\n          )[0].messages\r\n        )\r\n      );\r\n    }\r\n  }, [pid]);\r\n\r\n  function handleTextFieldInput(event) {\r\n    setInput(event.target.value);\r\n  }\r\n  function handleTextFieldSubmit(event) {\r\n    setChats((prevValue) =>\r\n      prevValue.concat({\r\n        time: \"2020-12-22\",\r\n        sender: \"Batman\",\r\n        message: input,\r\n      })\r\n    );\r\n    setInput(\"\");\r\n    event.preventDefault();\r\n  }\r\n  return (\r\n    <div className=\"messenger-box\">\r\n      {person && (\r\n        <header className=\"messenger-header\">\r\n          <a href=\"/\">\r\n            <button type=\"backButton\" onClick={props.onClick}>\r\n              <p>←</p>\r\n            </button>\r\n          </a>\r\n          <img className=\"friend-image\" alt=\"friend-img\" src={person.image} />\r\n          <div>\r\n            <h1>{person.name} </h1>\r\n          </div>\r\n        </header>\r\n      )}\r\n      <div className=\"messages\">\r\n        <div className=\"all-chats\">\r\n          {chats.length !== 0 &&\r\n            chats.map((message, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <p className={message.sender === \"Batman\" ? \"right\" : \"left\"}>\r\n                    {message.message}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"textfield\">\r\n          <span>\r\n            <p>😊</p>\r\n          </span>\r\n          <form className=\"textfield-form\" onSubmit={handleTextFieldSubmit}>\r\n            <input type=\"text\" onChange={handleTextFieldInput} value={input} />\r\n            <button type=\"submit\" />\r\n          </form>\r\n          <span>\r\n            <p>📎</p>\r\n          </span>\r\n          <span>\r\n            <p>📷</p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Header/Header\";\nimport MenuBar from \"./MenuBar/MenuBar\";\nimport Chats from \"./Chats/Chats\";\nimport Messenger from \"./Messenger/Messenger\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact>\n        <Header />\n        <MenuBar />\n        <Chats />\n      </Route>\n      <Route path=\"/chats/:userId\" exact>\n        <Messenger />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}