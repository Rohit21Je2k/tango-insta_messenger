{"version":3,"sources":["shared/Context/auth-context.js","shared/components/Navigation/SideDrawer.js","shared/components/UIElements/Backdrop.js","Header/Header.js","MenuBar/MenuBar.js","shared/components/UIElements/Card.js","shared/Util/Validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/Button.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/components/hooks/form-hooks.js","shared/components/hooks/http-hook.js","Auth/Auth.js","Chats/ChatBox.js","Chats/Chats.js","Messenger/Messenger.js","Friends/FriendItem.js","Friends/AddFriend.js","shared/components/hooks/auth-hook.js","Friends/FriendList.js","Posts/Posts.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","SideDrawer","props","nodeRef","React","useRef","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","ref","className","onClick","children","Backdrop","Header","auth","useContext","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","src","alt","MenuBar","to","Card","style","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","validate","value","validators","isValid","validator","type","trim","length","val","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","useEffect","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","Button","href","size","inverse","danger","exact","disabled","ModalOverlay","content","headerClass","header","onSubmit","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","Fragment","onCancel","ErrorModal","onClear","error","LoadingSpinner","asOverlay","formReducer","formIsValid","inputId","inputs","useHttpClient","isLoading","setIsLoading","setError","activeHttpRequests","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","Auth","history","useHistory","isLoginMode","setIsLoginMode","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","email","password","inputHandler","setFormData","process","JSON","stringify","name","undefined","prevMode","ChatBox","person","setPerson","messageData","friendId","users","item","friendData","lastMsg","Chats","chats","setChats","messages","getMessages","map","msgId","index","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Messenger","useParams","input","setMsgId","inputMsg","collection","doc","set","time","sender","docRef","get","then","docSnap","exists","onSnapshot","data","fetchFire","user","friend","_id","fetchMessages","FriendItem","setFriend","fetchFriend","AddFriend","friendEmail","reloadFetch","prevValue","logoutTimer","FriendList","friends","setFriends","reloadFriends","setReloadFriends","fetchData","Posts","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","fallback","render","StrictMode"],"mappings":"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","file":"static/js/main.62a48c68.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    token: null,\r\n    userId: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});","import React from \"react\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nfunction SideDrawer(props) {\r\n  const nodeRef = React.useRef();\r\n\r\n  return (\r\n    <CSSTransition\r\n      nodeRef={nodeRef}\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside ref={nodeRef} className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return <div className=\"backdrop\" onClick={props.onClick}></div>;\n};\n\nexport default Backdrop;\n","import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport SideDrawer from \"../shared/components/Navigation/SideDrawer\";\r\nimport Backdrop from \"../shared/components/UIElements/Backdrop\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header() {\r\n  const auth = useContext(AuthContext);\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  function openDrawerHandler() {\r\n    setDrawerIsOpen(true);\r\n  }\r\n\r\n  function closeDrawerHandler() {\r\n    setDrawerIsOpen(false);\r\n  }\r\n  return (\r\n    <header className=\"main-page\">\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          {auth.isLoggedIn && <button onClick={auth.logout}>LOGOUT</button>}\r\n        </nav>\r\n      </SideDrawer>\r\n      <h1>Tango</h1>\r\n      <button className=\"main-page_btn\" onClick={openDrawerHandler}>\r\n        <img\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRtxtjn4FO15TqY7pnoNd-XE6uhcGpu3e_DYw&usqp=CAU\"\r\n          alt=\"pic\"\r\n        />\r\n      </button>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./MenuBar.css\";\r\n\r\nexport default function MenuBar() {\r\n  return (\r\n    <div className=\"menu-bar\">\r\n      <Link to=\"/tango-insta_messenger/chats\">\r\n        <div className=\"chats\">\r\n          <p>Chats</p>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/tango-insta_messenger/friends\">\r\n        <div className=\"friends\">\r\n          <p>Friends</p>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/tango-insta_messenger/posts\">\r\n        <div className=\"posts\">\r\n          <p>Posts</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import './Card.css';\n\nfunction Card(props) {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from \"../../Util/Validators\";\r\nimport \"./Input.css\";\r\n\r\nfunction inputReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return { ...state, isTouched: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(event) {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  }\r\n\r\n  function touchHandler() {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  }\r\n\r\n  const element =\r\n    props.element === \"imput\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && `form-control--invalid`\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nfunction Button (props){\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nfunction ModalOverlay(props) {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        nodeRef={React.useRef(null)}\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useCallback, useReducer } from \"react\";\r\n\r\nfunction formReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if(!state.inputs[inputId])\r\n        continue;\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n      case \"SET_DATA\": return {\r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function useForm(initialInputs, initialFormValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  },[]);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport function useHttpClient() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n        if (!response.ok) throw new Error(responseData.message);\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        setError(err.message);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  function clearError() {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Card from \"../shared/components/UIElements/Card\";\r\nimport Input from \"../shared/components/FormElements/Input\";\r\nimport Button from \"../shared/components/FormElements/Button\";\r\n// import ImageUpload from \"../shared/components/FormElements/ImageUpload\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_EMAIL,\r\n} from \"../shared/Util/Validators\";\r\n\r\nimport useForm from \"../shared/components/hooks/form-hooks\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport \"./Auth.css\";\r\n\r\nexport default function Auth() {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  async function authSubmitHandler(event) {\r\n    event.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/auth/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n        history.push(\"/tango-insta_messenger/chats\");\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/auth/signup`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            name: formState.inputs.name.value,\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n        history.push(\"/tango-insta_messenger/chats\");\r\n      } catch (err) {}\r\n    }\r\n  }\r\n\r\n  function switchModeHandler() {\r\n    if (!isLoginMode)\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    else\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  }\r\n\r\n  function errorHandler() {\r\n    clearError();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <Card className=\"authentication\" >\r\n        {isLoading && (\r\n          <div className=\"center\">\r\n            <LoadingSpinner asOverlay />\r\n          </div>\r\n        )}\r\n        <h2>{isLoginMode ? \"LOGIN\" : \"SIGNUP\"}</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {/* {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )} */}\r\n          {!isLoginMode && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"password should be min 6 characters\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          Switch to {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\r\n\r\nexport default function ChatBox(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [person, setPerson] = useState();\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const messageData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/message/${props.userId}`\r\n      );\r\n      const friendId = messageData.users.filter((item) => item !== auth.userId);\r\n      const friendData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/${friendId}`\r\n      );\r\n      setPerson({\r\n        id: friendData.id,\r\n        name: friendData.name,\r\n       // lastMsg: friendData.lastMsg.message,\r\n      });\r\n    }\r\n\r\n    fetch();\r\n    //setPerson(people.filter((person) => person.id === props.userId)[0]);\r\n  }, [auth.userId, sendRequest, props.userId]);\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner />}\r\n      {person && (\r\n        <div className=\"chat-box\">\r\n          <img\r\n            className=\"friend-image\"\r\n            alt=\"friend-img\"\r\n            src=\"https://picsum.photos/200/200\"\r\n          />\r\n          <Link\r\n            to={`/tango-insta_messenger/chats/${person.id}`}\r\n            className=\"friend-info-a\"\r\n          >\r\n            <div className=\"friend-info\">\r\n              <h5 className=\"friend-name\">Name : {person.name}</h5>\r\n              <p className=\"friend-msg\">Message: {person.lastMsg} </p>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport \"./Chats.css\";\r\n\r\nexport default function Chats(props) {\r\n  const auth = useContext(AuthContext);\r\n  const [chats, setChats] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  useEffect(() => {\r\n    async function getMessages() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/user/${auth.userId}`\r\n        );\r\n        setChats(responseData.messages);\r\n      } catch (err) {}\r\n    }\r\n    if (auth.userId) getMessages();\r\n  }, [auth.userId, sendRequest]);\r\n\r\n  return (\r\n    <div className=\"all-chat\">\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {chats.length !== 0 &&\r\n        chats.map((msgId, index) => <ChatBox key={index} userId={msgId} />)}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\n//import LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\r\nimport \"./Messenger.css\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBoWQ61xXSfNIiqJhFXx-Z1Q3kxVMkXR-M\",\r\n  authDomain: \"tango-instamsg.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://tango-instamsg-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"tango-instamsg\",\r\n  storageBucket: \"tango-instamsg.appspot.com\",\r\n  messagingSenderId: \"1093579952641\",\r\n  appId: \"1:1093579952641:web:2b01e43792b1b56cff2600\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst firestore = firebase.firestore();\r\n//let msg;\r\n\r\nfunction ChatRoom() {\r\n  const messagesRef = firestore.collection(\"messages\");\r\n  const query = messagesRef.orderBy(\"userId\").limit(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n\r\n  console.log(messages);\r\n}\r\n\r\nasync function writeFire(userId, msg) {\r\n  const messagesRef = firestore.collection(\"messages\");\r\n  await messagesRef.add({\r\n    timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    userId: userId,\r\n    message: msg,\r\n  });\r\n}\r\n\r\n//console.log(msg);\r\nexport default function Messenger(props) {\r\n  const auth = useContext(AuthContext);\r\n  const friendId = useParams().userId;\r\n  const [fireData, setFireData] = useState();\r\n  const [input, setInput] = useState();\r\n  const [chats, setChats] = useState([]);\r\n  const [person, setPerson] = useState();\r\n  const [msgId, setMsgId] = useState();\r\n  const { error, sendRequest, clearError } = useHttpClient();\r\n  // const [pusherdata, setpusher] = useState();\r\n  //ChatRoom();\r\n  useEffect(() => {\r\n    async function fetchFire() {\r\n      // const data = await firestore\r\n      //   .collection(\"messages\")\r\n      //   .doc(\"J7vZV0ONpHkAb9OVvclH\").get();\r\n      const docRef = await firestore.collection(\"messages\").doc(msgId);\r\n      docRef.get().then((docSnap) => {\r\n        if (docSnap.exists)\r\n          docRef.onSnapshot((doc) => setChats(doc.data().messages));\r\n        else {\r\n          docRef.set({\r\n            messages: [],\r\n            users: [auth.userId, friendId],\r\n          });\r\n          docRef.onSnapshot((doc) => setChats(doc.data().messages));\r\n        }\r\n      });\r\n      // docref\r\n      //   .doc(\"J7vZV0ONpHkAb9OVvclH\")\r\n      //   .onSnapshot((doc) => setFireData(doc.data()));\r\n\r\n      // docref.doc(\"newDoc\").set({\r\n      //   name: \"newdoc\",\r\n      // });\r\n      // setFireData(doc);\r\n      // console.log(doc.data());\r\n      //const query = messagesRef.orderBy(\"userId\").limit(25);\r\n      // data.docs.forEach((doc) => console.log(doc.data()));\r\n      //setFireData(data.docs.map(doc => doc.data()));\r\n      // setFireData(doc);\r\n      // console.log(messagesRef.docs)\r\n      //const [messages] = useCollectionData(query, { idField: \"id\" });\r\n    }\r\n    if (msgId && friendId) fetchFire();\r\n  }, [auth.userId, msgId, friendId]);\r\n  //fireData && console.log(fireData);\r\n  //console.log(messages);\r\n  //fireData && console.log(fireData);\r\n  // console.log(pusherdata);\r\n\r\n  // useEffect(() => {\r\n  //   ChatRoom();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchMessages() {\r\n      const messageData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/message`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          user: auth.userId,\r\n          friend: friendId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n\r\n      const friendData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/${friendId}`\r\n      );\r\n      setPerson({\r\n        name: friendData.name,\r\n      });\r\n      setMsgId(messageData._id);\r\n\r\n      // setChats((prevValue) => prevValue.concat(messageData.messages));\r\n    }\r\n    fetchMessages();\r\n  }, [auth.userId, friendId, sendRequest, input]);\r\n\r\n  // function handleTextFieldInput(event) {\r\n  //    setInput(event.target.value);\r\n  // }\r\n\r\n  async function handleTextFieldSubmit(event) {\r\n    event.preventDefault();\r\n    const inputData = event.target.inputMsg.value;\r\n    await firestore\r\n      .collection(\"messages\")\r\n      .doc(msgId)\r\n      .set({\r\n        messages: [\r\n          ...chats,\r\n          {\r\n            time: \"2021-04-01\",\r\n            sender: auth.userId,\r\n            message: inputData,\r\n          },\r\n        ],\r\n      });\r\n    await sendRequest(\r\n      `${process.env.REACT_APP_BACKEND_URL}/message/${msgId}`,\r\n      \"POST\",\r\n      JSON.stringify({\r\n        time: \"2021-04-01\",\r\n        sender: auth.userId,\r\n        message: event.target.inputMsg.value,\r\n      }),\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n\r\n    event.target.inputMsg.value = \"\";\r\n    // setInput(\"\");\r\n  }\r\n  return (\r\n    <div className=\"messenger-box\">\r\n      <ErrorModal error={error} clearError={clearError} />\r\n      {/* {isLoading && <LoadingSpinner />} */}\r\n      {person && (\r\n        <header className=\"messenger-header\">\r\n          <Link to=\"/tango-insta_messenger/chats\">\r\n            <button type=\"backButton\" onClick={props.onClick}>\r\n              <p>←</p>\r\n            </button>\r\n          </Link>\r\n          <img\r\n            className=\"friend-image\"\r\n            alt=\"friend-img\"\r\n            src=\"https://picsum.photos/200/200\"\r\n          />\r\n          <div>\r\n            <h1>{person.name} </h1>\r\n          </div>\r\n        </header>\r\n      )}\r\n      <div className=\"messages\">\r\n        <div className=\"all-chats\">\r\n          {chats.length !== 0 &&\r\n            chats.map((message, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <p\r\n                    className={\r\n                      message.sender === auth.userId ? \"right\" : \"left\"\r\n                    }\r\n                  >\r\n                    {message.message}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"textfield\">\r\n          <span>\r\n            <p>😊</p>\r\n          </span>\r\n          <form className=\"textfield-form\" onSubmit={handleTextFieldSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"inputMsg\"\r\n              //onChange={handleTextFieldInput}\r\n              //value={input}\r\n            />\r\n            <button type=\"submit\" />\r\n          </form>\r\n          <span>\r\n            <p>📎</p>\r\n          </span>\r\n          <span>\r\n            <p>📷</p>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\n\r\nexport default function FriendItem(props) {\r\n  const [friend, setFriend] = useState();\r\n  const { error, sendRequest, clearError } = useHttpClient();\r\n  useEffect(() => {\r\n    async function fetchFriend() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/user/${props.userId}`\r\n        );\r\n        setFriend({\r\n          id: responseData.id,\r\n          name: responseData.name,\r\n        });\r\n      } catch (err) {}\r\n    }\r\n    fetchFriend();\r\n    // setPerson(people.filter((person) => person.id === props.userId)[0]);\r\n  }, [props.userId, sendRequest]);\r\n  return (\r\n    <React.Fragment>\r\n      {friend && (\r\n        <div className=\"chat-box\">\r\n          <ErrorModal error={error} onClear={clearError} />\r\n          <img\r\n            className=\"friend-image\"\r\n            alt=\"friend-img\"\r\n            src=\"https://picsum.photos/200/200\"\r\n          />\r\n          <Link\r\n            to={`/tango-insta_messenger/chats/${friend.id}`}\r\n            className=\"friend-info-a\"\r\n          >\r\n            <div className=\"friend-info\">\r\n              <h5 className=\"friend-name\">{friend.name}</h5>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\n\r\nexport default function AddFriend(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { error, sendRequest, clearError } = useHttpClient();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const friendEmail = event.target.email.value;\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/${auth.userId}/friend`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: friendEmail,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      props.reloadFetch((prevValue) => !prevValue);\r\n      event.target.email.value =\"\";\r\n    } catch (err) {}\r\n  }\r\n  return (\r\n    <div>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" />\r\n        <button type=\"submit\">\r\n          AddFriend\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    )\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n  }, [login]);\r\n\r\n\r\n  return { token , login, logout , userId} ;\r\n};\r\n","import FriendItem from \"./FriendItem\";\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../shared/Context/auth-context\";\r\nimport { useHttpClient } from \"../shared/components/hooks/http-hook\";\r\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\r\nimport AddFriend from \"./AddFriend\";\r\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport \"./FriendItem.css\";\r\n\r\nexport default function FriendList(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [friends, setFriends] = useState([]);\r\n  const [reloadFriends, setReloadFriends] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        setFriends([]);\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/user/${auth.userId}`\r\n        );\r\n        setFriends(responseData.friends);\r\n      } catch (err) {}\r\n    }\r\n    if (auth.userId) fetchData();\r\n  }, [auth.userId, sendRequest, reloadFriends]);\r\n\r\n  return (\r\n    <div className=\"all-chat\">\r\n      <AddFriend reloadFetch={setReloadFriends} />\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {friends.length !== 0 &&\r\n        friends.map((friendId, index) => (\r\n          <FriendItem key={index} userId={friendId} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Posts() {\r\n  return (\r\n    <div>\r\n      <h1>Posts appear here</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"./Header/Header\";\nimport MenuBar from \"./MenuBar/MenuBar\";\nimport Auth from \"./Auth/Auth\";\nimport Chats from \"./Chats/Chats\";\nimport Messenger from \"./Messenger/Messenger\";\nimport FriendList from \"./Friends/FriendList\";\nimport Posts from \"./Posts/Posts\";\n\nimport { AuthContext } from \"./shared/Context/auth-context\";\nimport { useAuth } from \"./shared/components/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/tango-insta_messenger/chats\" exact>\n          <MenuBar />\n          <Chats />\n        </Route>\n        <Route path=\"/tango-insta_messenger/friends\" exact>\n          <MenuBar />\n          <FriendList />\n        </Route>\n        <Route path=\"/tango-insta_messenger/posts\" exact>\n          <MenuBar />\n          <Posts />\n        </Route>\n        <Route path=\"/tango-insta_messenger/chats/:userId\" exact>\n          <MenuBar />\n          <Messenger />\n        </Route>\n        <Redirect to=\"/tango-insta_messenger/chats\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/tango-insta_messenger\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/tango-insta_messenger\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <Header />\n        <Suspense\n          fallback={\n            <div className=\"center\">\n              <LoadingSpinner asOverlay />\n            </div>\n          }\n        >\n          {routes}\n        </Suspense>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}